plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.service'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation("org.springframework.boot:spring-boot-starter-reactor-netty")

    // S3
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.701')
    implementation 'com.amazonaws:aws-java-sdk-s3'

    // view
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.webjars.bower:bootstrap:4.3.1'
    implementation 'org.webjars.bower:vue:2.5.16'

    // 외부 브로커를 사용하기 위해
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-reactor-netty', version: '2.4.6'

    // jackson2json에서 LocalDateTime을 handling 하기 위해
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

//     // Querydsl
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
//    // test 롬복 사용
//    testCompileOnly 'org.projectlombok:lombok'
//    testAnnotationProcessor 'org.projectlombok:lombok'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.security:spring-security-test'

    // junit
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Application Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

test {
    useJUnitPlatform()
}

//
//// Querydsl 설정부
//def generated = 'src/main/generated'
//
//// querydsl QClass 파일 생성 위치를 지정
//tasks.withType(JavaCompile) {
//    options.getGeneratedSourceOutputDirectory().set(file(generated))
//}
//
//// java source set 에 querydsl QClass 위치 추가
//sourceSets {
//    main.java.srcDirs += [ generated ]
//}
//
//// gradle clean 시에 QClass 디렉토리 삭제
//clean {
//    delete file(generated)
//}